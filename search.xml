<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[BL游戏盘点感动瞬间（一）——鬼畜眼镜，lamento]]></title>
      <url>xjinjin.net/2016/08/14/bl-game-moved/</url>
      <content type="html"><![CDATA[<p>作为一个腐女，玩了很久的BL文字冒险游戏，有画风赞的，有剧情赞的，有BGM赞的。每每那些精彩直戳泪点的瞬间，让人爱到心碎。</p>
<p>所以特地开个系列来诉说那一段段感人肺腑的故事，欢迎同感者来交流。</p>
<h2 id="鬼畜眼镜"><a href="#鬼畜眼镜" class="headerlink" title="鬼畜眼镜"></a>鬼畜眼镜</h2><p><img src="http://upload-images.jianshu.io/upload_images/1199120-a25fb34b00d0d201.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="鬼畜眼镜图"></p>
<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h3 id="蜜豆桑和眼镜克哉重逢"><a href="#蜜豆桑和眼镜克哉重逢" class="headerlink" title="蜜豆桑和眼镜克哉重逢"></a>蜜豆桑和眼镜克哉重逢</h3><p>首当其冲的必然是鬼畜眼镜的这张了（翻来翻去就这张比较有记忆点了），蜜豆桑的GE线是我非常喜欢的线，蜜豆桑真的好傲娇啊！<br>眼睛克哉在对御堂实施了一系列“惨无人道”的鬼畜行径后，看着逐渐丧失生气的御堂，终于恍然大悟，原来自己所做的这一切只是出于喜欢，只是天真的以为把他的一切夺过来之后，自己就能得到他。一番悔悟后，克哉决定放开御堂，让一切重归于零。</p>
<p>然后命运让两人再次相遇，此时的御堂已经恢复了以往的神采。而克哉装作陌生人一般的口吻触动了他的内心。</p>
<p>白茫茫的雪夜，御堂最终还是追到了克哉的身边，质问他，他对他来说已经什么都不算了嘛</p>
<p>尽管克哉装作无所谓，御堂还是忍不住将自己地心意袒露，明明觉得自己那么恨他，明明把一切与克哉有关的东西都销毁，明明那么努力地想忘记他，却始终是徒劳，克哉已经在他的心里留下深深地烙印。</p>
<p>讶异御堂的表白之际，克哉将御堂揽入怀中，深深地吻上渴慕已久的唇。</p>
<blockquote>
<p>克哉：“我的表白一年前你已经听过了，现在轮到你了。”<br>御堂：“…..喜欢…..”<br>克哉：“我听不到哦”<br>御堂：“…….喜欢你“</p>
</blockquote>
<h2 id="lamento"><a href="#lamento" class="headerlink" title="lamento"></a>lamento</h2><p>接下来就是lamento啦，其实lamento三条线都比较像，大白，小黑和大叔都因为各种各样的原因堕入黑暗，而柯诺尔就是拯救他们心灵的那抹光明</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1199120-31b9c83cf4a5aae1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大白相爱相杀图"></p>
<h3 id="莱伊柯诺尔相爱相杀"><a href="#莱伊柯诺尔相爱相杀" class="headerlink" title="莱伊柯诺尔相爱相杀"></a>莱伊柯诺尔相爱相杀</h3><p>大白一直宣称自己只是因为柯诺尔赞牙地身份才把他留在身边，对柯诺尔也一直很冷淡。强大的外壳之下势必隐藏着一颗脆弱的心灵，从小得不到父母关爱的大白，开始渴求杀戮，对被撕裂者流出的鲜血变态般的感到温暖。</p>
<p>他发觉了，自己的意识总有一天会被隐藏的欲望所吞噬，他开始害怕，甚至抗拒柯诺尔的接触。柯诺尔看着这样的莱伊，实在无法放任不管，他向大白承诺，如果有一天，他真的堕入黑暗再也回不来了，那么他一定会亲手了结他。</p>
<p>万万没想到，最终的厮杀场上，真的迎来了这样的时刻，柯诺尔万分心痛，但依然摒弃懦弱，将剑刺进了彼此的胸口。</p>
<p>最后一刻，他安静的闭上眼睛，感受着彼此最后的温度，就这样怀抱着彼此死去，是否也是一种不错的结局呢。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1199120-afe8e5d4b7c14406.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="小黑忠犬图"></p>
<h3 id="阿萨多带着柯诺尔重归故里"><a href="#阿萨多带着柯诺尔重归故里" class="headerlink" title="阿萨多带着柯诺尔重归故里"></a>阿萨多带着柯诺尔重归故里</h3><p>小黑简直是忠犬，哦不，忠猫啊。</p>
<p>作为禁忌之子，小黑从小就不受奈良群族的待见，因为帮助了柯诺尔，而遭受了整个奈良的驱逐和追杀。是柯诺尔改变了他的信仰，带他来到了外面的世界，而柯诺尔也成了他唯一的追随。</p>
<p>打破禁忌的惩罚就是阿萨多背负的血脉，他是不详的存在，是恶魔之子。柯诺尔读取阿萨多母亲遗物的记忆，告诉阿萨多即便中间有几多绝望和痛苦，但他的母亲到最后一刻，仍然觉得能遇见他的父亲，能生下他是此生最大的美好。</p>
<p>拼尽全力与自身的诅咒去抵抗，仍然一步步沦陷，阿萨多开始逃避柯诺尔，他怕自己有一天变的丑陋不堪，会伤害到他，会被再次抛弃。</p>
<p>最后，在大魔王利克斯的驱使下，阿萨多完全失去了理性，堕落成了恶魔一般的存在。柯诺尔竭力挽回，但伤口的疼痛让他难以集中精神，阿萨多命在旦夕，柯诺尔咬牙斩断了自己的手臂，最终在柯诺尔，阿萨多的父亲，莱伊等一众人的努力下，战争终于结束。</p>
<p>恢复意识的阿萨多，看到柯诺尔德的手，顿时泪如雨下，悔恨交加。<br>而柯诺尔只是温柔的抱着他，告诉他，我没事，不痛了。</p>
<p>一切恍如梦一般逝去，除了柯诺尔手上的残缺，好像没什么能证明那场战争的存在……..不安分的柯诺尔试图像往常一样去爬树，却无法像以往一样灵活，不慎摔下来，却正好落入阿萨多的怀抱。</p>
<p>阿萨多看着他的伤口，眼里的愧疚不言而喻。柯诺尔小心的遮住，尽管现在还时常隐隐作痛，尽管那场战争遗留下的利克斯的记忆让他每每从噩梦中惊醒，但身边有阿萨多的陪伴，那样小心翼翼的眼神看着他，一切也都不那么可怕了。</p>
<p>樱花飞舞之际，阿萨多决定重回奈良，现在的他已经变得足够强大去面对一切，更重要的，身边有柯诺尔的陪伴…….</p>
<p>不得不提，修伊和利克斯是lamento最大的泪点。三条线的GE全通，才能完整的了解这两个人之间的事情，心疼利克斯，那样强烈的恨，是因为那样炽烈的爱。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1199120-51503b0f5b41e721.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="利克斯修伊图"></p>
<blockquote>
<p>“就算全世界要将你抹杀，我也不会将你忘记”</p>
</blockquote>
<p>这应该是修伊要对利克斯说的吧………即便已经死去，修伊仍然用自己最后的灵魂，借助柯诺尔的身体将他的感情诉说给利克斯听。</p>
<p>他从来没有想过要背叛利克斯，甚至当别人以权位为要挟时，他毅然决然了选择了利克斯。当他得知阴谋赶到的时候，大火已经吞噬了一切，他自责自己为何那么不小心被人跟踪，导致利克斯丧命。生命像一下子失去了颜色，然而他低估了猫性的黑暗面，他们除了想杀利克斯，也想杀了和“恶魔”来往的他。</p>
<p>利克斯，居于深山，潜心研究的伟大魔法师。猫们害怕他，认为他是邪恶的，他也不屑与他们来往。然而平静的生活却某一天被一只叫修伊的小猫打破，纠缠不休。利克斯从来没见过这样的猫，既不害怕他，还想跟他做朋友。渐渐地，他们成了好朋友，修伊向他诉说着外面世界的美好，而利克斯从来没有这样去信任过谁，他对他的感情甚至超越了朋友。</p>
<p>突如其来的绞杀，让利克斯愤恨到了极点，那条路是他专门为修伊开辟的，除了他，不可能有任何人知道。<br>说好的约定呢，说好的明天呢，全部都是谎言，他以为修伊和那帮人一样，接近他，只是为了有一天能杀了他。</p>
<p>失去了理智的利克斯，为了报复修伊，拿修伊的孩子，也就是柯诺尔做情感容器，让他去承载那份罪恶。</p>
<p>最后的最后，修伊借助柯诺尔唱出了那首曾经约定好的为利克斯而写的歌，利克斯才终于明白，原来自己之所以会那么憎恨，是因为自己对修伊，对他，曾经，包括现在，是那么的………..</p>
<p>柯诺尔有时在想，利克斯不惜把世界搅得翻天覆地，是不是只是为了能再见修伊一面呢………</p>
<p>话说, lamento的每个GE结局都非常温馨，但BE就简直惨无人道，我那么可爱的柯诺尔怎么能被四个恶魔染指呢。。。</p>
<p>可惜他不像鬼畜那样，回想只有H部分的戏码，所以有些剧情记不太清了哈，欢迎指正和补充，嘻嘻嘻……..</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[js数字format转换代码，带千，万，百万单位]]></title>
      <url>xjinjin.net/2016/08/12/unit-conversion/</url>
      <content type="html"><![CDATA[<p>所谓带单位，就是实现1000-&gt;1千，259999-&gt;25万，10020002-&gt;1千万类似这样的处理</p>
<p>在介绍format的snippet之前，先来介绍一个很好用的库（虽然并没有什么关系）, <a href="http://numeraljs.com/" target="_blank" rel="external">numeral.js</a>, 有很多format的功能，譬如百分比转换，货币转换，单位换算，还能unformat, 配置不同的语言转换标准，真的十分强大。</p>
<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<p>事实上，numeral.js库也提供了诸如这样的numeral(1000).format(‘0 a’) =&gt; 1 千 加单位的format功能，配置好中文语言标准即可。然而，似乎只能以3位分割，匹配到千，百万，亿这种（也许文档没看仔细），可我还想要万，千万呢，又或者自由位数分割，于是就有了下面这段代码。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberUpperFormat</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// num - 位数</span></span><br><span class="line">        <span class="comment">// 简单理解后面要有三个0，则是千，4个零，则是万。当然不一定是零，位数到了就行，反正都会省略掉（未做四舍五入）</span></span><br><span class="line">        <span class="comment">// 可以随意的增删改units内容实现单位的配置</span></span><br><span class="line">        <span class="keyword">const</span> units = [</span><br><span class="line">          &#123;num: <span class="number">3</span>, unit: <span class="string">'千'</span>&#125;,</span><br><span class="line">          &#123;num: <span class="number">4</span>, unit: <span class="string">'万'</span>&#125;,</span><br><span class="line">          &#123;num: <span class="number">6</span>, unit: <span class="string">'百万'</span>&#125;,</span><br><span class="line">          &#123;num: <span class="number">7</span>, unit: <span class="string">'千万'</span>&#125;,</span><br><span class="line">          &#123;num: <span class="number">8</span>, unit: <span class="string">'亿'</span>&#125;</span><br><span class="line">        ];</span><br><span class="line">        <span class="comment">// 精确到整数，直接用js自带方法input.toFixed(0)也可以</span></span><br><span class="line">        <span class="keyword">const</span> num = numeral(input).format(<span class="string">'0'</span>);</span><br><span class="line">        <span class="keyword">if</span> (num.length &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">// 项目相关需求，千以下不加单位</span></span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 保证前面至少留一位</span></span><br><span class="line">        <span class="keyword">const</span> len = num.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> isFind = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, length = units.length; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> item = units[i];</span><br><span class="line">            <span class="keyword">if</span> (len &gt;= item.num &amp;&amp; len &lt; units[i + <span class="number">1</span>].num) &#123;</span><br><span class="line">                isFind = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i === (length - <span class="number">2</span>)) &#123;</span><br><span class="line">                isFind = <span class="literal">true</span>;</span><br><span class="line">                item = units[++i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isFind) &#123;</span><br><span class="line">                <span class="comment">// 确认区间后，返回前几位加上单位</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;num.slice(0, num.length - item.num)&#125;</span><span class="subst">$&#123;item.unit&#125;</span>`</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码还有些坚固性等方面的问题，欢迎补充！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[透明背景,可编辑下拉框]]></title>
      <url>xjinjin.net/2016/07/15/transparent-editable-select/</url>
      <content type="html"><![CDATA[<p>可编辑的下拉框似乎已经有很多实现了，无非是加上一个input，配合监听事件，不过小金金偏爱透明的控件，所有实现有点变化。<br>依旧是非图片实现（没准，有图片会更方便）</p>
<p>实现效果<br><img src="http://ww4.sinaimg.cn/large/904e587bgw1f5vjav1q5ig204102ndgw.gif" alt="透明可编辑下拉框"></p>
<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h2 id="基本实现"><a href="#基本实现" class="headerlink" title="基本实现"></a>基本实现</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"select-box"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">maxlength</span>=<span class="string">"2"</span> <span class="attr">value</span>=<span class="string">"10"</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"show-select"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">'data'</span> <span class="attr">class</span>=<span class="string">"bottom-select"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">option</span>&gt;</span>10<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">option</span>&gt;</span>20<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">select</span>&#123;</span><br><span class="line">				<span class="attribute">position</span>: absolute;</span><br><span class="line">				<span class="attribute">background</span>: none;</span><br><span class="line">				<span class="attribute">color</span>:white;</span><br><span class="line">				<span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">				<span class="attribute">height</span>:<span class="number">20px</span>;</span><br><span class="line">				<span class="attribute">top</span>:<span class="number">40px</span>;<span class="attribute">left</span>:<span class="number">75px</span>;</span><br><span class="line">				<span class="attribute">border-color</span>: white;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="selector-class">.show-select</span> &#123;</span><br><span class="line">				<span class="attribute">z-index</span>:<span class="number">1</span>;</span><br><span class="line">				<span class="attribute">pointer-events</span>: none;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="selector-class">.bottom-select</span> &#123;</span><br><span class="line">				<span class="attribute">z-index</span>:<span class="number">0</span>;</span><br><span class="line">				<span class="attribute">color</span>:transparent</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="selector-tag">input</span> &#123;</span><br><span class="line">				<span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">				<span class="attribute">color</span>: white;</span><br><span class="line">				<span class="attribute">background</span>: none;</span><br><span class="line">				<span class="attribute">position</span>: absolute;</span><br><span class="line">				<span class="attribute">width</span>:<span class="number">30px</span>;</span><br><span class="line">				<span class="attribute">height</span>:<span class="number">20px</span>;<span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">				<span class="attribute">left</span>:<span class="number">80px</span>;</span><br><span class="line">				<span class="attribute">top</span>:<span class="number">38px</span>;</span><br><span class="line">				<span class="attribute">text-align</span>: center;</span><br><span class="line">				<span class="attribute">border</span>: none;</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>
<h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><p>不变的结构是，用input覆盖在select上响应用户输入，排版对齐什么不用说啦<br>结合css来看，回答几个问题</p>
<ol>
<li>为什么要用两个select<br>A: 由于所有控件都是透明背景，所以为了既显示出select的可点击部分，又隐藏select中间的内容部分，使用show-select显示控件，使用bottom-select响应事件</li>
<li>pointer-events是什么<br>A: pointer-events设为none,<strong>则该元素永远不会成为鼠标事件的target</strong>,故可以点击到最底层的bottom-select<br>具体使用可见<a href="http://www.css88.com/book/css/properties/user-interface/pointer-events.htm" target="_blank" rel="external">pointer-events属性详解</a></li>
<li>这样就够了嘛<br>A: 当然…..不够，还需要js监听select的change事件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#data'</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    $(<span class="string">'input'</span>).val($(<span class="string">'#data'</span>).find(<span class="string">'option:selected'</span>).text())</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[web app透明渐变的导航栏]]></title>
      <url>xjinjin.net/2016/07/06/transparent-nav/</url>
      <content type="html"><![CDATA[<p>这种透明渐变的导航栏就是我们经常看到的随用户滚动改变透明度的导航栏，本次主要通过background-color的rgba值来实现</p>
<p>原理：监听window的scroll事件，根据滚动值动态设置rgba值</p>
<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<p>下图为一个简单的实现效果<br><img src="http://ww3.sinaimg.cn/large/904e587bjw1f5kfdid90og20940fcduf.gif" alt="实现效果"></p>
<h2 id="最简实现"><a href="#最简实现" class="headerlink" title="最简实现"></a>最简实现</h2><p>html,css准备,一个nav bar，大家都会写的咯^.^<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">"header"</span> <span class="attr">style</span>=<span class="string">"background-color: rgba(247,247,247,0)"</span> <span class="attr">class</span>=<span class="string">"transparent_nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/back.png"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>导航栏<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.transparent_nav</span>&#123;</span><br><span class="line">      <span class="attribute">position</span>: fixed;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line">      <span class="attribute">display</span>: block;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>接下来就是js部分，将window.scrollY减去一个基线值，如0,再将差与一个固定的offset值比较，如150，得出此时的rgba中的a值<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> header = <span class="built_in">document</span>.getElementById(<span class="string">"header"</span>)</span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">"scroll"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// top-0  offset-150</span></span><br><span class="line">    header.style.backgroundColor = <span class="string">"rgba(247,247,247,"</span>+(<span class="built_in">window</span>.scrollY<span class="number">-0</span>)/<span class="number">150</span>+<span class="string">")"</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></p>
<h2 id="进阶实现"><a href="#进阶实现" class="headerlink" title="进阶实现"></a>进阶实现</h2><p>将透明渐变方法封装一下，使得其可复用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Transparent = <span class="function"><span class="keyword">function</span>(<span class="params">element,option</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">this</span>.element = element;</span><br><span class="line">			<span class="keyword">this</span>.option = option || &#123;</span><br><span class="line">				offset:<span class="number">150</span>,</span><br><span class="line">				top:<span class="number">0</span>,</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">this</span>._style = <span class="keyword">this</span>.element.style</span><br><span class="line">			<span class="keyword">this</span>._bgColor = <span class="keyword">this</span>._style.backgroundColor</span><br><span class="line">			<span class="keyword">var</span> color = getColor(<span class="keyword">this</span>._bgColor)</span><br><span class="line">			<span class="keyword">this</span>.R = color[<span class="number">0</span>]</span><br><span class="line">			<span class="keyword">this</span>.G = color[<span class="number">1</span>]</span><br><span class="line">			<span class="keyword">this</span>.B = color[<span class="number">2</span>]</span><br><span class="line">			<span class="keyword">this</span>.handleScroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">				<span class="keyword">this</span>._style.backgroundColor = <span class="string">"rgba("</span>+<span class="keyword">this</span>.R+<span class="string">","</span>+<span class="keyword">this</span>.G+<span class="string">","</span>+<span class="keyword">this</span>.B+<span class="string">","</span>+(<span class="built_in">window</span>.scrollY-<span class="keyword">this</span>.option.top)/<span class="keyword">this</span>.option.offset+<span class="string">")"</span></span><br><span class="line">			&#125;</span><br><span class="line">	        <span class="built_in">window</span>.addEventListener(<span class="string">'scroll'</span>, <span class="keyword">this</span>.handleScroll);</span><br><span class="line">		&#125;</span><br><span class="line">	  Transparent(header)</span><br></pre></td></tr></table></figure></p>
<p>其中，getColor方法的作用是提取rgba的四个参数值，以数组形式返回，可以通过正则匹配，或者最简单的substring,split,想怎么实现这么实现咯！！</p>
<p>就这么简单就完啦，撒花，撒花！！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[自定义android时间轴控件]]></title>
      <url>xjinjin.net/2016/06/03/timeline-of-android/</url>
      <content type="html"><![CDATA[<p>其实没什么技术难点，采用原生的ListView实现，重点反而在layout布局上(RelativeLayout真是强大)。</p>
<p>先来展示一下最终效果</p>
<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文=""><br><img src="http://ww4.sinaimg.cn/mw690/ea514745jw1f4iieg7126j20u01e0428.jpg" width="300" height="auto" alt="时间轴见图"><br><img src="http://ww2.sinaimg.cn/mw690/ea514745jw1f4iivvvv33j20u01e0gou.jpg" width="300" height="auto" alt="时间轴见图"></the></li>
</ul>
<h2 id="最简实现"><a href="#最简实现" class="headerlink" title="最简实现"></a>最简实现</h2><h3 id="第一步，准备layout文件"><a href="#第一步，准备layout文件" class="headerlink" title="第一步，准备layout文件"></a>第一步，准备layout文件</h3><p>首先是timeline_item.layout, 具体样式无妨，只是要保证item在listview中展示时有时间轴效果<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span> <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span><br><span class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/left_wrap"</span></span><br><span class="line">        <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true"</span></span><br><span class="line">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"30dp"</span></span><br><span class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span><br><span class="line">        <span class="attr">android:layout_height</span>=<span class="string">"fill_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">View</span></span><br><span class="line">        <span class="attr">android:layout_width</span>=<span class="string">"2dp"</span></span><br><span class="line">        <span class="attr">android:layout_height</span>=<span class="string">"fill_parent"</span></span><br><span class="line">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></span><br><span class="line">        <span class="attr">android:background</span>=<span class="string">"#000"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--圆形背景图，xml实现--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RelativeLayout</span></span><br><span class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/line_circle"</span></span><br><span class="line">        <span class="attr">android:layout_width</span>=<span class="string">"40dp"</span></span><br><span class="line">        <span class="attr">android:layout_height</span>=<span class="string">"40dp"</span></span><br><span class="line">        <span class="attr">android:background</span>=<span class="string">"@drawable/circle"</span></span><br><span class="line">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--可代码控制显示不同的icon--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span><br><span class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/line_icon"</span></span><br><span class="line">            <span class="attr">android:layout_width</span>=<span class="string">"20dp"</span></span><br><span class="line">            <span class="attr">android:layout_height</span>=<span class="string">"20dp"</span></span><br><span class="line">            <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span><br><span class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/line_info"</span></span><br><span class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span><br><span class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span><br><span class="line">        <span class="attr">android:text</span>=<span class="string">"我是一条时间信息"</span></span><br><span class="line">        <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></span><br><span class="line">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"20dp"</span></span><br><span class="line">        <span class="attr">android:textSize</span>=<span class="string">"20dp"</span></span><br><span class="line">        <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/left_wrap"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span><br><span class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/line_time"</span></span><br><span class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span><br><span class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span><br><span class="line">        <span class="attr">android:text</span>=<span class="string">"2015-12-13"</span></span><br><span class="line">        <span class="attr">android:layout_alignLeft</span>=<span class="string">"@+id/line_info"</span></span><br><span class="line">        <span class="attr">android:layout_below</span>=<span class="string">"@+id/line_info"</span></span><br><span class="line">        <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>给出drawable/circle.xml文件，实现了一个圆形背景，当然你也可以用图片，或者去掉<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"35dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">size</span></span><br><span class="line">        <span class="attr">android:height</span>=<span class="string">"70dp"</span></span><br><span class="line">        <span class="attr">android:width</span>=<span class="string">"70dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">gradient</span></span><br><span class="line">        <span class="attr">android:startColor</span>=<span class="string">"#9933cc"</span></span><br><span class="line">        <span class="attr">android:endColor</span>=<span class="string">"#aa66cc"</span></span><br><span class="line">        <span class="attr">android:angle</span>=<span class="string">"90"</span></span><br><span class="line">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span></span><br><span class="line">        <span class="attr">android:width</span>=<span class="string">"1dp"</span></span><br><span class="line">        <span class="attr">android:color</span>=<span class="string">"#ffff"</span>&gt;</span><span class="tag">&lt;/<span class="name">stroke</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span> <span class="attr">android:left</span>=<span class="string">"5dp"</span></span><br><span class="line">        <span class="attr">android:right</span>=<span class="string">"5dp"</span></span><br><span class="line">        <span class="attr">android:top</span>=<span class="string">"5dp"</span></span><br><span class="line">        <span class="attr">android:bottom</span>=<span class="string">"5dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>还需要一个activity_time.layout文件存放我们的listview，注意listview的默认divider要去掉，否则会有分割线<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListView</span></span><br><span class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/time_list"</span></span><br><span class="line">    <span class="attr">android:background</span>=<span class="string">"@android:color/transparent"</span></span><br><span class="line">    <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span><br><span class="line">    <span class="attr">android:headerDividersEnabled</span>=<span class="string">"false"</span></span><br><span class="line">    <span class="attr">android:footerDividersEnabled</span>=<span class="string">"false"</span></span><br><span class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span><span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>如果分割线还在，别担心，我们可以在代码里设置setDivier(null)</p>
<h3 id="第二步：准备listview的Adapter-新建一个TimeLineAdapter-继承BaseAdapter，给出部分关键代码"><a href="#第二步：准备listview的Adapter-新建一个TimeLineAdapter-继承BaseAdapter，给出部分关键代码" class="headerlink" title="第二步：准备listview的Adapter,新建一个TimeLineAdapter,继承BaseAdapter，给出部分关键代码"></a>第二步：准备listview的Adapter,新建一个TimeLineAdapter,继承BaseAdapter，给出部分关键代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeLineAdpater</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Context mc;</span><br><span class="line">    <span class="keyword">private</span> String[] data = &#123;<span class="string">"开心"</span>,<span class="string">"快乐"</span>,<span class="string">"美丽"</span>,<span class="string">"富有"</span>,<span class="string">"爱情"</span>,<span class="string">"啦啦"</span>&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TimeLineAdpater</span><span class="params">(Context text)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mc = text;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> pos, View view, ViewGroup par)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(view == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">// 参数加入par,让item view保持原有的高度</span></span><br><span class="line">            View item = LayoutInflater.from(mc).inflate(R.layout.timeline_item,par,<span class="keyword">false</span>);</span><br><span class="line">            TextView text = (TextView)item.findViewById(R.id.line_info);</span><br><span class="line">            text.setText(text.getText()+data[pos]);</span><br><span class="line"></span><br><span class="line">            ImageView image = (ImageView)item.findViewById(R.id.line_icon);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 一个android icon库，强烈推荐 github地址: https://github.com/mikepenz/Android-Iconics</span></span><br><span class="line">            IconicsDrawable icon = <span class="keyword">new</span> IconicsDrawable(mc)</span><br><span class="line">                    .icon(GoogleMaterial.Icon.gmd_today)</span><br><span class="line">                    .color(Color.WHITE);</span><br><span class="line">            image.setImageDrawable(icon);</span><br><span class="line">            view = item;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="最后一步：创建TimeActiviy文件，将TimeLineAdapter-Set到ListView上"><a href="#最后一步：创建TimeActiviy文件，将TimeLineAdapter-Set到ListView上" class="headerlink" title="最后一步：创建TimeActiviy文件，将TimeLineAdapter Set到ListView上"></a>最后一步：创建TimeActiviy文件，将TimeLineAdapter Set到ListView上</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_time);</span><br><span class="line">        ListView list = (ListView) findViewById(R.id.time_list);</span><br><span class="line">        list.setDivider(<span class="keyword">null</span>);</span><br><span class="line">        list.setAdapter(<span class="keyword">new</span> TimeLineAdpater(<span class="keyword">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样，就可以达到如上图1一样的效果啦。</p>
<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>1.如上图2，时间轴可以放在中间（类似记账软件），根据奇偶或一定规则，通过LayoutParams调整item的布局或者干脆inflate不同的layout</p>
<p>2.item布局自带一定的点击效果，可以自己调整，比如点击小图标或某一个item跳转到详情页等等</p>
]]></content>
    </entry>
    
  
  
</search>
